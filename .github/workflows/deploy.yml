name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deployment_scope:
        description: 'Select what to deploy'
        required: true
        default: 'affected'
        type: choice
        options:
          - affected
          - all
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      branch_name:
        description: 'Branch to deploy (only for dev)'
        required: false

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.8.0
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4

      # 🚫 Enforce environment if not on main branch
      - name: Enforce environment rules
        id: enforce-env
        run: |
          BRANCH="${GITHUB_REF##*/}"
          INPUT_ENV="${{ github.event.inputs.environment }}"

          echo "🔁 Current Branch: $BRANCH"
          echo "🌍 Requested Environment: $INPUT_ENV"

          if [ "$BRANCH" != "main" ]; then
            echo "🔒 Non-main branch detected. Forcing environment to 'dev'."
            ENVIRONMENT="dev"
          else
            ENVIRONMENT="$INPUT_ENV"
          fi

          echo "env=$ENVIRONMENT" >> "$GITHUB_OUTPUT"

      # 📦 Log deployment info
      - name: Log deployment configuration
        run: |
          echo "🚀 Deployment Configuration:"
          echo "🔹 Environment       : ${{ steps.enforce-env.outputs.env }}"
          echo "🔹 Deployment Scope  : ${{ github.event.inputs.deployment_scope }}"
          echo "🔹 Branch Name       : ${{ github.event.inputs.branch_name }}"
          echo "🔹 Git Branch        : ${GITHUB_REF##*/}"

      # 🧠 Get affected or all services
      - name: Get list of services based on scope
        id: get-services
        run: |
          if [ "${{ github.event.inputs.deployment_scope }}" = "all" ]; then
            echo "📦 Scope: ALL — listing services in apps/*"
            services=$(pnpm exec nx show projects --projects "apps/*")
          else
            echo "🔍 Scope: AFFECTED — listing affected services"
            services=$(pnpm exec nx show projects --affected)
          fi

          echo "$services"

          # Convert to CSV for potential future use
          services_csv=$(echo "$services" | paste -sd "," -)
          echo "services=$services_csv" >> "$GITHUB_OUTPUT"

      # 🧪 Lint, test, build based on scope
      - name: Run tasks (lint, test, build)
        run: |
          if [ "${{ github.event.inputs.deployment_scope }}" = "all" ]; then
            echo "🧪 Running tasks on ALL projects"
            pnpm exec nx run-many -t lint test build --all
          else
            echo "🧪 Running tasks on AFFECTED projects"
            pnpm exec nx affected -t lint test build
          fi

      # 🖨️ Log selected service list
      - name: Log selected services
        run: |
          echo "📝 Selected Services: ${{ steps.get-services.outputs.services }}"
